/*
 * tpg.c
 *
 *  Created on: Jul 2, 2017
 *      Author: Karthik Poduval <kpoduval@gmail.com>
 *
 *
 */
#include "xv_tpg.h"
#include "xaxivdma.h"
#include "xparameters.h"


/*
 * Device instance definitions
 */
XAxiVdma AxiVdma;
XV_tpg     tpg;



int tpg_initialize(void)
{
/* initialize TPG */
	int Status=0;

	Status = XV_tpg_Initialize(&tpg, XPAR_V_TPG_0_DEVICE_ID);
	  if(Status != XST_SUCCESS) {
	    xil_printf("ERR:: TPG device not found\r\n");
	    return(XST_FAILURE);
	  } else {

		  xil_printf("KVPZ: TPG initialized Hurray\r\n");
	  }

	  return Status;

}


void tpg_configure(int width, int height, XTpg_PatternId pattern)
{
  //Stop TPG
  XV_tpg_DisableAutoRestart(&tpg);

  XV_tpg_Set_height(&tpg, width);
  XV_tpg_Set_width(&tpg, height);
  XV_tpg_Set_colorFormat(&tpg, 0x0); /** 0x0 RGB video */
  //XV_tpg_Set_bckgndId(&tpg, XTPG_BKGND_CHECKER_BOARD);
  XV_tpg_Set_bckgndId(&tpg, pattern);
  XV_tpg_Set_ovrlayId(&tpg, 0); /* moving box*/

}


void tpg_vmda_start(UINTPTR WriteFrameAddr1, UINTPTR WriteFrameAddr2, UINTPTR WriteFrameAddr3, int widht, int height)
{

	   //S2MM
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0x30, 0x4); //reset
	   //XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0x30, 0x88); //genlock

	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xAC,   WriteFrameAddr1);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xAC+4, WriteFrameAddr2);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xAC+8, WriteFrameAddr3);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xA4, widht*3);
	   //XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xA4, 640);
	   //XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xA8, 0x01002000);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xA8, widht*4);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0x30, 0x3);
	   XAxiVdma_WriteReg(XPAR_AXI_VDMA_2_BASEADDR, 0xA0, height);

}

void tpg_demo_menu(DisplayCtrl *dispPtr)
{
	xil_printf("\x1B[H"); //Set cursor to top left of terminal
	xil_printf("\x1B[2J"); //Clear terminal
	xil_printf("**************************************************\n\r");
	xil_printf("*           ZYBO TPG User Demo               *\n\r");
	xil_printf("**************************************************\n\r");
	xil_printf("*Port: %42s*\n\r", (dispPtr->fHdmi == DISPLAY_HDMI) ? "HDMI" : "VGA");
	xil_printf("*Current Resolution: %28s*\n\r", dispPtr->vMode.label);
	printf("*Pixel Clock Freq. (MHz): %23.3f*\n\r", (dispPtr->fHdmi == DISPLAY_HDMI) ? (dispPtr->pxlFreq / 5.0) : (dispPtr->pxlFreq));
	xil_printf("**************************************************\n\r");
	xil_printf("\n\r");
	xil_printf("1 - %s\n\r");
	xil_printf("2 - %s\n\r", VMODE_800x600.label);
	xil_printf("3 - %s\n\r", VMODE_1280x720.label);
	xil_printf("4 - %s\n\r", VMODE_1280x1024.label);
	xil_printf("5 - %s\n\r", VMODE_1920x1080.label);
	xil_printf("q - Quit (don't change resolution)\n\r");
	xil_printf("\n\r");
	xil_printf("Select a new test pattern:");
}



